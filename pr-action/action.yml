name: 'MemBrowse PR Memory Report'
description: 'Analyze memory usage of embedded firmware and upload report to MemBrowse'
author: 'MemBrowse'

inputs:
  elf:
    description: 'Path to ELF file'
    required: true
  ld:
    description: 'Space-separated list of linker script paths'
    required: true
  target_name:
    description: 'Target name like esp32, stm32f4'
    required: true
  api_key:
    description: 'API key for MemBrowse'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Google Bloaty
      shell: bash
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          # Linux: use Homebrew (bloaty not available in apt repositories)
          if ! command -v brew &> /dev/null; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.bashrc
            eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          fi
          brew install bloaty
          echo "Installed Bloaty via Homebrew on Linux"
          
          # Add Homebrew to PATH for subsequent steps
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
          echo "/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          # macOS: use Homebrew
          brew install bloaty
          echo "Installed Bloaty via Homebrew on macOS"
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "Error: Bloaty is not supported on Windows runners"
          echo "Please use Linux or macOS runners for memory analysis"
          exit 1
        else
          echo "Error: Unsupported runner OS: $RUNNER_OS"
          exit 1
        fi
        
        # Verify installation
        bloaty --version
    
    - name: Run memory analysis
      shell: bash
      run: |
        ${{ github.action_path }}/entrypoint.sh \
          "${{ inputs.elf }}" \
          "${{ inputs.ld }}" \
          "${{ inputs.target_name }}" \
          "${{ inputs.api_key }}"

branding:
  icon: 'bar-chart-2'
  color: 'blue'